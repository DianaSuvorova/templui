package showcase

import (
	"github.com/axzilla/templui/components"
)

// Basic skeleton examples
templ SkeletonDefault() {
	<div class="space-y-6">
		<!-- Text skeleton example -->
		<div>
			<p class="text-sm font-semibold mb-2">Text skeletons</p>
			<div class="space-y-2">
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-[250px]"})
				@components.Skeleton(components.SkeletonProps{Class: "h-4 w-[200px]"})
			</div>
		</div>
		<!-- Avatar and text combination -->
		<div>
			<p class="text-sm font-semibold mb-2">User profile skeleton</p>
			<div class="flex items-center gap-4">
				@components.Skeleton(components.SkeletonProps{Class: "h-12 w-12 rounded-full"})
				<div class="space-y-2">
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-[250px]"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-[200px]"})
				</div>
			</div>
		</div>
	</div>
}

// Card skeleton made by composing multiple skeleton elements
templ SkeletonCard() {
	<div class="space-y-6">
		<div>
			<p class="text-sm font-semibold mb-2">Card skeleton</p>
			<div class="p-4 border rounded-lg">
				<!-- Image placeholder -->
				@components.Skeleton(components.SkeletonProps{Class: "h-[200px] w-full rounded-md mb-4"})
				<!-- Title and content -->
				<div class="space-y-2">
					@components.Skeleton(components.SkeletonProps{Class: "h-5 w-2/3"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-full"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-3/4"})
				</div>
				<!-- Footer with actions -->
				<div class="flex justify-between items-center mt-6 pt-4 border-t">
					@components.Skeleton(components.SkeletonProps{Class: "h-9 w-20 rounded-md"})
					@components.Skeleton(components.SkeletonProps{Class: "h-9 w-20 rounded-md"})
				</div>
			</div>
		</div>
	</div>
}

// Table skeleton example
templ SkeletonTable() {
	<div>
		<p class="text-sm font-semibold mb-2">Table skeleton</p>
		<div class="border rounded-md">
			<!-- Table header -->
			<div class="border-b p-4 grid grid-cols-4 gap-4">
				@components.Skeleton(components.SkeletonProps{Class: "h-5 w-4/5"})
				@components.Skeleton(components.SkeletonProps{Class: "h-5 w-4/5"})
				@components.Skeleton(components.SkeletonProps{Class: "h-5 w-4/5"})
				@components.Skeleton(components.SkeletonProps{Class: "h-5 w-4/5"})
			</div>
			<!-- Table rows -->
			for i := 0; i < 5; i++ {
				<div class="border-b p-4 grid grid-cols-4 gap-4">
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-4/5"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-3/4"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-4/5"})
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-2/3"})
				</div>
			}
		</div>
	</div>
}

// Dashboard skeleton with multiple components
templ SkeletonDashboard() {
	<div>
		<p class="text-sm font-semibold mb-2">Dashboard skeleton</p>
		<div class="grid gap-6 md:grid-cols-3">
			<!-- Stats cards -->
			for i := 0; i < 3; i++ {
				<div class="p-4 border rounded-lg">
					@components.Skeleton(components.SkeletonProps{Class: "h-4 w-20 mb-2"})
					@components.Skeleton(components.SkeletonProps{Class: "h-8 w-24 mb-4"})
					<div class="flex items-center gap-2">
						@components.Skeleton(components.SkeletonProps{Class: "h-4 w-12"})
						@components.Skeleton(components.SkeletonProps{Class: "h-4 w-4"})
					</div>
				</div>
			}
		</div>
		<!-- Chart -->
		<div class="mt-6 p-4 border rounded-lg">
			@components.Skeleton(components.SkeletonProps{Class: "h-5 w-1/3 mb-6"})
			@components.Skeleton(components.SkeletonProps{Class: "h-[240px] w-full rounded-md"})
		</div>
	</div>
}

// HTMX integration example
templ SkeletonHTMX() {
	<div>
		<p class="text-sm font-semibold mb-2">HTMX Integration Example</p>
		<div class="border rounded-lg p-4">
			<button
				class="bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md"
				hx-get="/api/dashboard"
				hx-trigger="click"
				hx-target="#dashboard-content"
				hx-indicator="#dashboard-loading"
			>
				Load Dashboard
			</button>
			<div id="dashboard-loading" class="htmx-indicator mt-4">
				<div class="space-y-4">
					<!-- Loading skeleton for dashboard -->
					<div class="grid gap-4 md:grid-cols-3">
						for i := 0; i < 3; i++ {
							<div class="p-4 border rounded-lg">
								@components.Skeleton(components.SkeletonProps{Class: "h-4 w-20 mb-2"})
								@components.Skeleton(components.SkeletonProps{Class: "h-8 w-24 mb-4"})
								@components.Skeleton(components.SkeletonProps{Class: "h-4 w-28"})
							</div>
						}
					</div>
					@components.Skeleton(components.SkeletonProps{Class: "h-[200px] w-full rounded-md mt-4"})
				</div>
			</div>
			<div id="dashboard-content" class="mt-4">
				<p class="text-muted-foreground text-sm">Click the button to load dashboard data.</p>
			</div>
		</div>
	</div>
}
