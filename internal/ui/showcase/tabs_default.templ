package showcase

import "github.com/axzilla/templui/components"

templ TabsDefault() {
	@components.TabsRoot(components.TabsRootProps{
		ID: "account-tabs",
	}) {
		@components.TabsList(components.TabsListProps{
			Class: "w-full max-w-xs",
		}) {
			@components.TabTrigger(components.TabTriggerProps{
				Value:    "account",
				IsActive: true,
			}) {
				Account
			}
			@components.TabTrigger(components.TabTriggerProps{
				Value: "password",
			}) {
				Password
			}
		}
		<div class="w-full max-w-xs mt-2">
			@components.TabContent(components.TabContentProps{
				Value:    "account",
				IsActive: true,
			}) {
				@AccountTab()
			}
			@components.TabContent(components.TabContentProps{
				Value: "password",
			}) {
				@PasswordTab()
			}
		</div>
	}
}

templ AccountTab() {
	@components.Card(components.CardProps{}) {
		@components.CardHeader() {
			@components.CardTitle() {
				Account 
			}
			@components.CardDescription() {
				Make changes to your account here. Click save when you are done.
			}
		}
		@components.CardContent() {
			<div class="flex flex-col gap-4">
				@components.Input(components.InputProps{
					Type:        components.InputTypeText,
					Placeholder: "Name",
					ID:          "name",
					Value:       "John Doe",
				})
				@components.Input(components.InputProps{
					Type:        components.InputTypeText,
					Placeholder: "Username",
					ID:          "username",
					Value:       "@johndoe",
				})
			</div>
		}
		@components.CardFooter() {
			@components.Button(components.ButtonProps{}) {
				Save changes
			}
		}
	}
}

templ PasswordTab() {
	@components.Card(components.CardProps{}) {
		@components.CardHeader() {
			@components.CardTitle() {
				Password 
			}
			@components.CardDescription() {
				Change your password here. After saving, you will be logged out.
			}
		}
		@components.CardContent() {
			<div class="flex flex-col gap-4">
				@components.Input(components.InputProps{
					Type:        components.InputTypePassword,
					Placeholder: "Current Password",
					ID:          "current_password",
					// Label:       "Current Password",
				})
				@components.Input(components.InputProps{
					Type:        components.InputTypePassword,
					Placeholder: "New Password",
					ID:          "new_password",
					// Label:       "New Password",
				})
			</div>
		}
		@components.CardFooter() {
			@components.Button(components.ButtonProps{}) {
				Save password
			}
		}
	}
}

// Für Rückwärtskompatibilität kann auch die ursprüngliche API verwendet werden
templ TabsDefaultBackwardsCompatible() {
	@components.Tabs(components.TabsProps{
		Tabs: []components.Tab{
			{
				ID:      "account",
				Title:   "Account",
				Content: AccountTab(),
			},
			{
				ID:      "password",
				Title:   "Password",
				Content: PasswordTab(),
			},
		},
		TabsContainerClass:    "w-full max-w-xs",
		ContentContainerClass: "w-full max-w-xs",
	})
}
