package showcase

import "github.com/axzilla/goilerplate/pkg/components"

templ ToastAdvanced() {
	<div class="max-w-4xl mx-auto p-8">
		<section class="mb-12">
			@components.Card(components.CardProps{}) {
				@components.CardContent() {
					<form
						class="flex flex-col gap-2"
						hx-post="/docs/toast/demo"
						hx-trigger="change, submit"
						hx-target="#toast-containerx"
					>
						// Message
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Message"})
							@components.Input(components.InputProps{
								Value: "Test Notification",
								Name:  "message",
							})
						}
						// Type
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Type"})
							@components.Select(components.SelectProps{
								Name: "type",
								Options: []components.SelectOption{
									{Value: "default", Label: "Default"},
									{Value: "success", Label: "Success"},
									{Value: "error", Label: "Error"},
									{Value: "warning", Label: "Warning"},
									{Value: "info", Label: "Info"},
								},
							})
						}
						// Position
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Position"})
							@components.Select(components.SelectProps{
								Name: "position",
								Options: []components.SelectOption{
									{Value: "top-right", Label: "Top Right"},
									{Value: "top-left", Label: "Top Left"},
									{Value: "top-center", Label: "Top Center"},
									{Value: "bottom-right", Label: "Bottom Right"},
									{Value: "bottom-left", Label: "Bottom Left"},
									{Value: "bottom-center", Label: "Bottom Center"},
								},
							})
						}
						// Duration
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Duration (ms)"})
							@components.Input(components.InputProps{
								Type:  "number",
								Name:  "duration",
								Value: "3000",
							})
						}
						// Size
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Size"})
							@components.Select(components.SelectProps{
								Name: "size",
								Options: []components.SelectOption{
									{Value: "sm", Label: "Small"},
									{Value: "md", Label: "Medium"},
									{Value: "lg", Label: "Large"},
								},
							})
						}
						// Options
						@components.FormItem(components.FormItemProps{}) {
							@components.Label(components.LabelProps{Text: "Options"})
							@components.FormItemFlex(components.FormItemProps{}) {
								@components.Toggle(components.ToggleProps{
									Name:    "dismissible",
									Checked: true,
								})
								@components.Label(components.LabelProps{Text: "Dismissible"})
							}
							@components.FormItemFlex(components.FormItemProps{}) {
								@components.Toggle(components.ToggleProps{
									Name:    "icon",
									Checked: true,
								})
								@components.Label(components.LabelProps{Text: "Show Icon"})
							}
						}
						@components.Button(components.ButtonProps{
							Text:  "Show Toast",
							Type:  "submit",
							Class: "w-full",
						})
					</form>
				}
			}
		</section>
		<div id="toast-containerx"></div>
		// Code Examples
		<section>
			<h2 class="text-xl font-semibold mb-4">Usage Examples</h2>
			<div class="space-y-4">
				<div class="p-4 bg-gray-50 rounded-lg">
					<h3 class="font-medium mb-2">Basic Usage</h3>
					<pre class="text-sm">
						{ `// In your handler
components.Toast(types.ToastConfig{
    Message: "Nachricht",
    Type: "success",
    Position: "top-right",
    Duration: 3000,
}).Render(ctx, w)` }
					</pre>
				</div>
				<div class="p-4 bg-gray-50 rounded-lg">
					<h3 class="font-medium mb-2">With HTMX</h3>
					<pre class="text-sm">
						{ `// Template
<form hx-post="/save" hx-target="#toast-container">
    ...
</form>
<div id="toast-container"></div>

// Handler
if err != nil {
    return components.Toast(types.ToastConfig{
        Message: err.Error(),
        Type: "error",
    }).Render(ctx, w)
}` }
					</pre>
				</div>
			</div>
		</section>
	</div>
}
