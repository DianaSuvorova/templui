package components

import (
	"github.com/axzilla/templui/icons"
	"github.com/axzilla/templui/utils"
)

type SelectProps struct {
	ID          string
	Name        string
	Placeholder string
	Options     []SelectOption
	Disabled    bool
	Required    bool
	HasError    bool
	Class       string
	Attributes  templ.Attributes
}

type SelectOption struct {
	Label      string
	Value      string
	Selected   bool
	Attributes templ.Attributes
}

templ Select(props SelectProps) {
	<div class={ utils.TwMerge("relative w-full", props.Class) }>
		<select
			x-ref={ props.ID }
			id={ props.ID }
			name={ props.Name }
			disabled?={ props.Disabled }
			required?={ props.Required }
			class={
				utils.TwMerge(
					"peer h-10 w-full px-3 py-2",
					"rounded-md border border-input bg-background text-sm",
					"appearance-none ring-offset-background",
					"placeholder:text-muted-foreground",
					"focus:outline-hidden focus:ring-2 focus:ring-ring focus:ring-offset-2",
					"disabled:cursor-not-allowed disabled:opacity-50",
					utils.TwIf("border-destructive ring-destructive", props.HasError),
				),
			}
			{ props.Attributes... }
		>
			if props.Placeholder != "" {
				<option value="" disabled selected hidden>{ props.Placeholder }</option>
			}
			for _, option := range props.Options {
				<option
					value={ option.Value }
					selected?={ option.Selected }
					{ option.Attributes... }
				>
					{ option.Label }
				</option>
			}
		</select>
		<div
			class={
				utils.TwMerge(
					"absolute right-3 top-3",
					"pointer-events-none",
					"peer-disabled:opacity-50",
				),
			}
		>
			@icons.ChevronDown(icons.IconProps{
				Size:  "16",
				Class: "text-muted-foreground",
			})
		</div>
	</div>
}
