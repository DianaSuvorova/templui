<script defer nonce=\"
\">\n            document.addEventListener('alpine:init', () => {\n                Alpine.data('timepicker', () => ({\n\t\t\t\t\topen: false,\n\t\t\t\t\tformValue: null,     // 24h Format for Form submission\n\t\t\t\t\tdisplayValue: null,  // 12h/24h Format for Display\n\t\t\t\t\tselectedHour: 0,\n\t\t\t\t\tselectedMinute: 0,\n\t\t\t\t\tisPM: false,\n\t\t\t\t\thours: [],\n\t\t\t\t\tminutes: [],\n\t\t\t\t\tuse12Hours: false,\n    \t\t\t\tposition: 'bottom',\n\n\t\t\t\t\tinit() {\n\t\t\t\t\t\tthis.use12Hours = this.$el.dataset.use12hours === 'true';\n\n\t\t\t\t\t\t// Initialize from dataset value\n\t\t\t\t\t\tif (this.$el.dataset?.value) {\n\t\t\t\t\t\t\tconst [hours, minutes] = this.$el.dataset.value.split(':').map(Number);\n\t\t\t\t\t\t\tthis.selectedMinute = minutes;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.use12Hours) {\n\t\t\t\t\t\t\t\tthis.isPM = hours >= 12;\n\t\t\t\t\t\t\t\tthis.selectedHour = hours > 12 ? hours - 12 : (hours === 0 ? 12 : hours);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.selectedHour = hours;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Set initial values\n\t\t\t\t\t\t\tthis.updateValues();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\ttoggleTimePicker() {\n\t\t\t\t\t\tthis.open = !this.open;\n\t\t\t\t\t\tif (this.open) {\n\t\t\t\t\t\t\tthis.$nextTick(() => this.updatePosition());\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tupdatePosition() {\n\t\t\t\t\t\tconst inputId = this.$root.dataset.inputId;\n\t\t\t\t\t\tconst trigger = document.getElementById(inputId);\n\t\t\t\t\t\tconst popup = this.$refs.timePickerPopup;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!trigger || !popup) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst rect = trigger.getBoundingClientRect();\n\t\t\t\t\t\tconst popupRect = popup.getBoundingClientRect();\n\t\t\t\t\t\tconst viewportHeight = window.innerHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (rect.bottom + popupRect.height > viewportHeight && rect.top > popupRect.height) {\n\t\t\t\t\t\t\tthis.position = 'top';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.position = 'bottom';\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tpositionClass() {\n\t\t\t\t\t\treturn this.position === 'bottom' ? 'top-full mt-1' : 'bottom-full mb-1';\n\t\t\t\t\t},\n\n                    closeTimePicker() {\n                        this.open = false;\n                    },\n\n\t\t\t\t\tupdateValues() {\n\t\t\t\t\t\t// Calculate 24h time for form\n\t\t\t\t\t\tlet hour24 = this.selectedHour;\n\t\t\t\t\t\tif (this.use12Hours) {\n\t\t\t\t\t\t\tif (this.isPM && hour24 !== 12) hour24 += 12;\n\t\t\t\t\t\t\tif (!this.isPM && hour24 === 12) hour24 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Always set 24h format for form submission\n\t\t\t\t\t\tthis.formValue = `${String(hour24).padStart(2, '0')}:${String(this.selectedMinute).padStart(2, '0')}`;\n\n\t\t\t\t\t\t// Set display format based on mode\n\t\t\t\t\t\tif (this.use12Hours) {\n\t\t\t\t\t\t\tthis.displayValue = `${String(this.selectedHour).padStart(2, '0')}:${String(this.selectedMinute).padStart(2, '0')} ${this.isPM ? 'PM' : 'AM'}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.displayValue = this.formValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tselectHour() {\n\t\t\t\t\t\tconst hour = parseInt(this.$el.value);\n\t\t\t\t\t\tthis.selectedHour = hour;\n\t\t\t\t\t\tthis.updateValues();\n\t\t\t\t\t},\n\n\t\t\t\t\tselectMinute() {\n\t\t\t\t\t\tconst minute = parseInt(this.$el.value);\n\t\t\t\t\t\tthis.selectedMinute = minute;\n\t\t\t\t\t\tthis.updateValues();\n\t\t\t\t\t},\n\n\t\t\t\t\tselectPeriod() {\n\t\t\t\t\t\tconst period = this.$el.getAttribute('data-period');\n\t\t\t\t\t\tthis.isPM = period === 'PM';\n\t\t\t\t\t\tthis.updateValues();\n\t\t\t\t\t},\n\n\t\t\t\t\tperiodButtonClass() {\n\t\t\t\t\t\tconst period = this.$el.getAttribute('data-period');\n\t\t\t\t\t\treturn period === 'PM' === this.isPM ? 'bg-primary text-primary-foreground' : '';\n\t\t\t\t\t}\n                }));\n            });\n        </script>
<div class=\"
\"
 data-value=\"
\"
 data-use12hours=\"
\" x-data=\"timepicker\" data-input-id=\"
\"><div class=\"relative\"><input type=\"hidden\" name=\"
\" x-bind:value=\"formValue\">
<button type=\"button\" @click=\"toggleTimePicker\"
 disabled
 class=\"
\">
</button></div><div x-show=\"open\" x-ref=\"timePickerPopup\" @click.away=\"closeTimePicker\" x-transition.opacity class=\"absolute left-0 z-50 w-72 p-4 rounded-lg border bg-popover shadow-md\" x-bind:class=\"positionClass\" @resize.window=\"updatePosition\"><div class=\"grid grid-cols-2 gap-2 flex-1\"><div>
</div><div>
</div></div><div class=\"flex justify-between mt-4 gap-2\"><div x-show=\"use12Hours\" class=\"flex justify-center gap-2\"><button type=\"button\" data-period=\"AM\" @click=\"selectPeriod\" class=\"px-3 py-1 text-sm rounded-md [&amp;:not(.bg-primary)]:hover:bg-muted\" x-bind:class=\"periodButtonClass\">
</button> <button type=\"button\" data-period=\"PM\" @click=\"selectPeriod\" class=\"px-3 py-1 text-sm rounded-md [&amp;:not(.bg-primary)]:hover:bg-muted\" x-bind:class=\"periodButtonClass\">
</button></div>
</div></div></div>