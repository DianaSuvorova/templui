package components

import "github.com/axzilla/templui/utils"

type FormMessageVariant string

const (
	FormMessageVariantError FormMessageVariant = "error"
	FormMessageVariantInfo  FormMessageVariant = "info"
)

type FormItemProps struct {
	ID    string
	Class string
}

type FormLabelProps struct {
	For           string
	Text          string
	Class         string
	DisabledClass string
}

type FormDescriptionProps struct {
	Class string
}

type FormMessageProps struct {
	Variant FormMessageVariant
	Message string
	Class   string
}

templ FormItem(props FormItemProps) {
	<div class={ utils.TwMerge("space-y-2", props.Class) }>
		{ children... }
	</div>
}

templ FormItemFlex(props FormItemProps) {
	<div class={ utils.TwMerge("items-center flex space-x-2", props.Class) }>
		{ children... }
	</div>
}

templ FormLabel(props FormLabelProps) {
	@Label(LabelProps{
		For:           props.For,
		Class:         props.Class,
		Text:          props.Text,
		DisabledClass: props.DisabledClass,
	})
}

templ FormDescription(props FormDescriptionProps) {
	<p class={ utils.TwMerge("text-sm text-muted-foreground", props.Class) }>
		{ children... }
	</p>
}

templ FormMessage(props FormMessageProps) {
	<p
		class={
			utils.TwMerge("text-[0.8rem] font-medium", props.Class),
			formMessageVariantClass(props.Variant),
		}
	>
		{ props.Message }
	</p>
}

func formMessageVariantClass(variant FormMessageVariant) string {
	switch variant {
	case FormMessageVariantError:
		return "text-red-500"
	case FormMessageVariantInfo:
		return "text-blue-500"
	default:
		return ""
	}
}
