package components

import (
	"github.com/axzilla/templui/utils"
	"strings"
)

type AvatarSize string

const (
	AvatarSizeSmall  AvatarSize = "small"
	AvatarSizeMedium AvatarSize = "medium"
	AvatarSizeLarge  AvatarSize = "large"
)

type AvatarProps struct {
	Size       AvatarSize
	Class      string
	Attributes templ.Attributes
}

type AvatarImageProps struct {
	Src        string
	Alt        string
	Class      string
	Attributes templ.Attributes
}

type AvatarFallbackProps struct {
	DelayMs    int
	Class      string
	Attributes templ.Attributes
}

templ Avatar(props AvatarProps) {
	<div
		class={ utils.TwMerge(
			"inline-flex items-center justify-center",
			avatarSizeClasses(props.Size),
			"rounded-full bg-muted",
			props.Class,
		) }
		{ props.Attributes... }
	>
		{ children... }
	</div>
}

templ AvatarImage(props AvatarImageProps) {
	<img
		src={ props.Src }
		alt={ props.Alt }
		class={ utils.TwMerge(
			"w-full h-full",
			"rounded-full object-cover",
			props.Class,
		) }
		{ props.Attributes... }
	/>
}

templ AvatarFallback(props AvatarFallbackProps) {
	<span
		class={ utils.TwMerge(
			"font-medium text-muted-foreground",
			props.Class,
		) }
		{ props.Attributes... }
	>
		{ children... }
	</span>
}

func avatarSizeClasses(size AvatarSize) string {
	switch size {
	case AvatarSizeSmall:
		return "w-8 h-8 text-xs"
	case AvatarSizeLarge:
		return "w-16 h-16 text-xl"
	default:
		return "w-12 h-12 text-base"
	}
}

func AvatarInitials(name string) string {
	parts := strings.Fields(name)
	initials := ""
	for i, part := range parts {
		if i > 1 {
			break
		}
		if len(part) > 0 {
			initials += string(part[0])
		}
	}
	return strings.ToUpper(initials)
}
